{% autoescape false %}
    <link href="{{ asset('bundles/redcodetree/css/style.min.css') }}" rel="stylesheet" type="text/css" media="all"/>
    <link href="{{ asset('bundles/redcodetree/css/contextmenu.css') }}" rel="stylesheet" type="text/css" media="all"/>

    <script src="{{ asset('bundles/redcodetree/js/jstree.min.js') }}"></script>
    <script>
        $(function() {
            $('#jstree_div')
                .jstree({
                    'core': {
                        'data': {
                            'url': '{{ path('redcode_tree_data', {'_sonata_admin': _sonata_admin}) }}&operation=get_node',
                            'data': function(node) {
                                return {'id': node.id === '#' ? null : node.id};
                            }
                        },
                        'check_callback': function(o, n, p, i, m) {
                            return true;
                        },
                        'themes': {
                            'responsive': false,
                            'variant': 'small',
                            'stripes': true
                        }
                    },
                    'contextmenu': {
                        'items': function(node) {
                            var tmp = $.jstree.defaults.contextmenu.items();
                            delete tmp.ccp;
                            tmp.edit = {
                                label: "Edit",
                                action: function(menu, data) {
                                    var tree = $('#jstree_div').jstree(true);
                                    var selectedNodes = tree.get_selected(true);
                                    var id = selectedNodes[0].id;
                                    var editUrl = '{{ admin.generateUrl('edit', {'id': '{id}'}) }}'.replace(encodeURI('{id}'), id);

                                    return start_field_dialog_form_edit_tree(editUrl, $('#jstree_div'));
                                }
                            };
                            tmp.select = {
                                label: "Select",
                                action: function(menu, data) {
                                    var tree = $('#jstree_div').jstree(true);
                                    var selectedNodes = tree.get_selected(true);
                                    var id = selectedNodes[0].id;
                                    var text = selectedNodes[0].text;
                                    console.log(text);
                                    var selectUrl = '{{ admin.generateUrl('edit', {'id': '{id}'}) }}'.replace(encodeURI('{id}'), id);

                                    return start_field_dialog_recipeCategory(selectUrl, text, id);
                                }
                            };
                            return tmp;
                        }
                    },
                    'types': {
                        'default': {'icon': 'fa fa-folder fa-fw'},
                        'file': {'valid_children': [], 'icon': 'fa fa-file fa-fw'}
                    },
                    'unique': {
                        'duplicate': function(name, counter) {
                            return name + ' ' + counter;
                        }
                    },
                    'plugins': ['state', 'dnd', 'types', 'contextmenu', 'unique']
                })
                .on('delete_node.jstree', function(e, data) {
                    $.get('{{ path('redcode_tree_data', {'_sonata_admin': _sonata_admin}) }}&operation=delete_node', {'id': data.node.id})
                        .fail(function() {
                            data.instance.refresh();
                        });
                })
                .on('create_node.jstree', function(e, data) {
                    $.get('{{ path('redcode_tree_data', {'_sonata_admin': _sonata_admin}) }}&operation=create_node', {
                        'type': data.node.type,
                        'parent_id': data.parent,
                        'text': data.node.text
                    })
                        .done(function(d) {
                            data.instance.set_id(data.node, d.id);
                        })
                        .fail(function() {
                            data.instance.refresh();
                        });
                })
                .on('rename_node.jstree', function(e, data) {
                    $.get('{{ path('redcode_tree_data', {'_sonata_admin': _sonata_admin}) }}&operation=rename_node', {
                        'id': data.node.id,
                        'text': data.text
                    })
                        .done(function(d) {
                            data.instance.set_text(data.node, d.text);
                        })
                        .fail(function() {
                            data.instance.refresh();
                        });
                })
                .on('move_node.jstree', function(e, data) {
                    $.get('{{ path('redcode_tree_data', {'_sonata_admin': _sonata_admin}) }}&operation=move_node', {
                        'id': data.node.id,
                        'parent_id': data.parent,
                        'position': data.position
                    })
                        .done(function(d) {
                        })
                        .fail(function() {
                            data.instance.refresh();
                        });
                });
        });
    </script>


    <script type="text/javascript">
        // handle the add link
        var field_dialog_form_edit_{{ id }} = function(link) {
            console.log(field_dialog_form_edit_{{ id }});
            initialize_popup_{{ id }}();
            var a = jQuery(this);
            field_dialog_content_{{ id }}.html('');
            console.log(field_dialog_content_{{ id }});
            Admin.log('[{{ id }}|field_dialog_form_edit] edit link action');
            // retrieve the form element from the related admin generator
            jQuery.ajax({
                url: link,
                dataType: 'html',
                success: function(html) {
                    Admin.log('[{{ id }}|field_dialog_form_edit] ajax success', field_dialog_{{ id }});
                    // populate the popup container
                    field_dialog_content_{{ id }}.html(html);
                    console.log(html);
                    field_dialog_title_{{ id }}.html("{{ admin.label|trans({}, admin.translationdomain) }}");
                    console.log("{{ admin.label }}");
                    Admin.shared_setup(field_dialog_{{ id }});
                    // capture the submit event to make an ajax call, ie : POST data to the
                    // related create admin
                    jQuery('a', field_dialog_{{ id }}).on('click', field_dialog_form_action_{{ id }});
                    jQuery('form', field_dialog_{{ id }}).on('submit', field_dialog_form_action_{{ id }});
                    // open the dialog in modal mode
                    field_dialog_{{ id }}.modal();
                    Admin.setup_list_modal(field_dialog_{{ id }});
                }
            });
        };

        // handle the post data
        var field_dialog_form_action_{{ id }} = function(event) {
            var element = jQuery(this);
            console.log(element);
            // return if the link is an anchor inside the same page
            if (this.nodeName == 'A' && (element.attr('href').length == 0 || element.attr('href')[0] == '#')) {
                Admin.log('[{{ id }}|field_dialog_form_action] element is an anchor, skipping action', this);
                return;
            }
            event.preventDefault();
            event.stopPropagation();
            Admin.log('[{{ id }}|field_dialog_form_action] action catch', this);
            initialize_popup_{{ id }}();
            var url, type;
            if (this.nodeName == 'FORM') {
                console.log('form');
                url  = element.attr('action');
                type = element.attr('method');
            } else if (this.nodeName == 'A') {
                console.log('a');
                url  = element.attr('href');
                type = 'GET';
            } else {
                alert('unexpected element : @' + this.nodeName + '@');
                return;
            }
            if (element.hasClass('sonata-ba-action')) {
                console.log('hasClass');
                Admin.log('[{{ id }}|field_dialog_form_action] reserved action stop catch all events');
                return;
            }
            var data = {
                _xml_http_request: true
            };
            var form = jQuery(this);
            Admin.log('[{{ id }}|field_dialog_form_action] execute ajax call');
            // the ajax post
            jQuery(form).ajaxSubmit({
                url: url,
                type: type,
                data: data,
                success: function(data) {
                    Admin.log('[{{ id }}|field_dialog_form_action] ajax success');
                    // if the crud action return ok, then the element has been added
                    // so the widget container must be refresh with the last option available
                    if (typeof data != 'string' && data.result == 'ok') {
                        field_dialog_{{ id }}.modal('hide');
                        $('#jstree_div').jstree('set_text', data.objectId, data.objectName);
                        console.log(data);

                        return;
                    }
                    // otherwise, display form error
                    field_dialog_content_{{ id }}.html(data);
                    Admin.shared_setup(field_dialog_{{ id }});
                    // reattach the event
                    jQuery('form', field_dialog_{{ id }}).submit(field_dialog_form_action_{{ id }});
                }
            });
            return false;
        };

        var field_dialog_{{ id }}         = false;
        var field_dialog_content_{{ id }} = false;
        var field_dialog_title_{{ id }}   = false;
        function initialize_popup_{{ id }}() {
            // initialize component

            if (!field_dialog_{{ id }}) {
                field_dialog_{{ id }}         = jQuery("#field_dialog_{{ id }}");
                field_dialog_content_{{ id }} = jQuery(".modal-body", "#field_dialog_{{ id }}");
                field_dialog_title_{{ id }}   = jQuery(".modal-title", "#field_dialog_{{ id }}");
                // move the dialog as a child of the root element, nested form breaks html ...
                {#jQuery(document.body).append(field_dialog_{{ id }});#}
                Admin.log('[{{ id }}|field_dialog] move dialog container as a document child');
            }
        }

        {#
            This code is used to defined the "edit" popup
        #}
        // this function initialize the popup
        // this can be only done this way has popup can be cascaded
        function start_field_dialog_form_edit_{{ id }}(link) {
            console.log('start');
            initialize_popup_{{ id }}();
            field_dialog_form_edit_{{ id }}(link);
            return false;
        }

        if (field_dialog_{{ id }}) {
            Admin.shared_setup(field_dialog_{{ id }});
        }





        // recipe edit form
        var field_dialog_recipeCategory_form_edit = function(link, text, id) {
            var a = jQuery(this);
            field_short_description = jQuery('#field_widget_s1324891760_recipeCategory');
            field_short_description.html('');

            jQuery.ajax({
                url: link,
                dataType: 'html',
                success: function (html) {
                    field_short_description.html('<span class="inner-field-short-description">' +
                        '<a href="' + link + '" target="new">'+ text + '</a>' +
                        '</span>');
                    jQuery('#s1324891760_recipeCategory').val(id);
                    Admin.shared_setup(field_short_description);
                    jQuery('a', jQuery(document.body)).on('click', field_dialog_recipeCategory_form_action);
                    jQuery('form', jQuery(document.body)).on('submit', field_dialog_recipeCategory_form_action);
                    Admin.shared_setup(jQuery(document.body));
                }
            });
        };

        // handle recipe edit form post
        var field_dialog_recipeCategory_form_action = function(event) {
            var element = jQuery(this);
            console.log(element);
            // return if the link is an anchor inside the same page
            if (this.nodeName == 'A' && (element.attr('href').length == 0 || element.attr('href')[0] == '#')) {
                return;
            }
            event.preventDefault();
            event.stopPropagation();
            var url, type;
            if (this.nodeName == 'FORM') {
                console.log('form');
                url  = element.attr('action');
                type = element.attr('method');
            } else if (this.nodeName == 'A') {
                console.log('a');
                url  = element.attr('href');
                type = 'GET';
            } else {
                alert('unexpected element : @' + this.nodeName + '@');
                return;
            }
            if (element.hasClass('sonata-ba-action')) {
                console.log('hasClass');
                return;
            }
            var data = {
                _xml_http_request: true
            };
            var form = jQuery(this);
            // the ajax post
            jQuery(form).ajaxSubmit({
                url: url,
                type: type,
                data: data,
                success: function(data) {
                    // if the crud action return ok, then the element has been added
                    // so the widget container must be refresh with the last option available
                    if (typeof data != 'string' && data.result == 'ok') {
                        window.location.href = '{{ path('admin_app_recipe_list') }}';
                        return;
                    }
                    Admin.shared_setup(this);
                    // reattach the event
                    jQuery('form', jQuery(document.body)).submit(field_dialog_recipeCategory_form_action);
                }
            });
            return false;
        };

        //Code used to defined the "select" popup
        function start_field_dialog_recipeCategory(link, text, id) {
            console.log('start select');
            field_dialog_recipeCategory_form_edit(link, text, id);
            return false;
        }
    </script>
{% endautoescape %}
